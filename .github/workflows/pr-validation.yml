name: PR Validation
on:
  pull_request:
    types: [ 'opened', 'edited', 'reopened', 'synchronize', 'labeled', 'unlabeled' ]
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: Assign PR to Author
        uses: samspills/assign-pr-to-author@v1.0
        with:
          repo-token: '${{ secrets.PROJECT_GITHUB_TOKEN }}'
      - name: Lint branch name
        uses: lekterable/branchlint-action@2.0.0
        with:
          allowed: |
            main
            /(develop|feature|bugfix|hotfix)\/\.*/i
            /(release)\/.*/i
      - name: Title PR Name
        uses: seferov/pr-lint-action@master
        with:
          title-regex: '.*#\d+.*'
          title-regex-flags: 'g' # optional
          error-message: 'GitHub issue number not found in your title or is invalid'
  enforce-label:
    name: Enforce PR labels
    runs-on: ubuntu-latest
    steps:
      - uses: yogevbd/enforce-label-action@2.1.0
        with:
          REQUIRED_LABELS_ANY: "feature,bug,optimize,testing,unit-test,workflows,lint,ci/cd,refactor,documentation,performance,security"
          REQUIRED_LABELS_ANY_DESCRIPTION: "Select at least one label ['feature','bug','optimize','testing','unit-test','workflows','lint',ci/cd','refactor','documentation','performance','security']"
          BANNED_LABELS: "banned,wontfix,obsolete,invalid,question,duplicate,try-your-luck,support-needed,low-priority"
  build:
    name: Build Android project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew assembleDebug
  lint-check:
    name: Lint checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Ktlint
        run: ./scripts/ktlint.sh -F -DisCI=true
      - name: Run Detetk
        run: ./gradlew detekt -DisCI=true
  android-lint-check:
    name: Android lint checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Check style
        run: ./gradlew lintDebug -DisCI=true
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "corretto"
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest -DisCI=true
      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-results
          path: junit
